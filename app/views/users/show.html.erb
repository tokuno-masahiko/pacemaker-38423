<div class="contents_row">
 <div class="contents_flex">
  <div class="show_list">
   製品画像<br>
  </div>
    <%= image_tag @product.image, class: "product-img" %>

    <div class="show_list">
    氏名<br>
    </div>
    <p class = "show__list"><%= @name %></p>
    <div class="show_list">
    残バッテリー年数<br>
    </div>
      <p class = "show__list"><%= "#{@product.battery}年" %></p>
    <div class="show_list">
    製品名<br>
    </div>
      <p class = "show__list"><%= @product.item %></p>
    <div class="show_list">
    メーカー<br>
    </div>
    <div>
      <p class = "show__list"><%= @product.maker %></p>
    </div>
 </div>
 <div class="contents_flex">
  <div class = "show_calendar">
   <%= form_with model: @plan, local: true, url: user_plans_path(@user.id), method: :post, class: 'form' do |f| %>

    <%= f.label :日付を選択, class: 'lavel' %>
    <%= f.date_field :date, class: 'date-select' %>
    <%= f.label :予定を入力, class: 'lavel' %>
    <%= f.text_field :plan, class: 'text-input' %>
    <%= f.submit '保存' %>
   <% end %>
  </div>
  <div class='calendar'>
    <% @week_days.each do |day| %>
      <div class='item'>
        <div class='date'>
          <%= day[:month] %>/<%= day[:date] %>
          <%= day[:wday] %>
        </div>
        <ul class='content'>
        <% if day[:plans].length != 0 %>
          <% day[:plans].each do |plan| %>
            <li class='plan-list'>・<%= plan %></li>
          <% end %>
        <% end %>
        </ul>
      </div>
    <% end %>
  </div>
 </div>
</div>
<%# <script> 'use strict';

console.clear();

{
  const today = new Date();
  let year = today.getFullYear();
  let month = today.getMonth();

  function getCalendarHead() {
    const dates = [];
    const d = new Date(year, month, 0).getDate();
    const n = new Date(year, month, 1).getDay();

    for (let i = 0; i < n; i++) {
      // 30
      // 29, 30
      // 28, 29, 30
      dates.unshift({
        date: d - i,
        isToday: false,
        isDisabled: true,
      });
    }

    return dates;
  }

  function getCalendarBody() {
    const dates = []; // date: 日付, day: 曜日
    const lastDate = new Date(year, month + 1, 0).getDate();

    for (let i = 1; i <= lastDate; i++) {
      dates.push({
        date: i,
        isToday: false,
        isDisabled: false,
      });
    }

    if (year === today.getFullYear() && month === today.getMonth()) {
      dates[today.getDate() - 1].isToday = true;
    }

    return dates;
  }

  function getCalendarTail() {
    const dates = [];
    const lastDay = new Date(year, month + 1, 0).getDay();

    for (let i = 1; i < 7 - lastDay; i++) {
      dates.push({
        date: i,
        isToday: false,
        isDisabled: true,
      });
    }

    return dates;
  }

  function clearCalendar() {
    const tbody = document.querySelector('tbody');

    while (tbody.firstChild) {
      tbody.removeChild(tbody.firstChild);
    }
  }

  function renderTitle() {
    const title = `${year}/${String(month + 1).padStart(2, '0')}`;
    document.getElementById('title').textContent = title;
  }

  function renderWeeks() {
    const dates = [
      ...getCalendarHead(),
      ...getCalendarBody(),
      ...getCalendarTail(),
    ];
    const weeks = [];
    const weeksCount = dates.length / 7;

    for (let i = 0; i < weeksCount; i++) {
      weeks.push(dates.splice(0, 7));
    }

    weeks.forEach(week => {
      const tr = document.createElement('tr');
      week.forEach(date => {
        const td = document.createElement('td');

        td.textContent = date.date;
        if (date.isToday) {
          td.classList.add('today');
        }
        if (date.isDisabled) {
          td.classList.add('disabled');
        }

        tr.appendChild(td);
      });
      document.querySelector('tbody').appendChild(tr);
    });
  }

  function createCalendar() {
    clearCalendar();
    renderTitle();
    renderWeeks();
  }

  document.getElementById('prev').addEventListener('click', () => {
    month--;
    if (month < 0) {
      year--;
      month = 11;
    }

    createCalendar();
  });

  document.getElementById('next').addEventListener('click', () => {
    month++;
    if (month > 11) {
      year++;
      month = 0;
    }

    createCalendar();
  });

  document.getElementById('today').addEventListener('click', () => {
    year = today.getFullYear();
    month = today.getMonth();

    createCalendar();
  });

  createCalendar();
}</script>

</div> %>